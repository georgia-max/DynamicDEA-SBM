from gurobipy import*from itertools import isliceimport csvdef csv2dict_for_network_dea(dea_data, v1_range, v2_range: object, p_n=0):    f = open(dea_data)    reader = csv.reader(f)    DMU = []    X, Y = {}, {}    # All values in v1_range should be greater than 0; otherwise, stop the function    if all(value > 0 for value in v1_range):        v1_range[:] = [x - 1 for x in v1_range]    else:        print("Error: all values given in in_range should be greater than 0")        # Return nothing to stop the function        return        # Same as the v1_range    if all(value > 0 for value in v2_range):        v2_range[:] = [y - 1 for y in v2_range]    else:        print("Error: all values given in out_range should be greater than 0")        # Return nothing to stop the function        return    counter = 0    for line in islice(reader, 1, None):        obs = line        key = obs[0]        # Create dictionaries        if (counter % (p_n + 1)) == 0:            DMU.append(key)  # Get DMU names            tmp_key = key            X[key] = []            Y[key] = []            try:                # Give a range to get input or ouput data                X[key].append([float(v) for v in obs[(v1_range[0]):(v1_range[1] + 1)]])  # List comprehension                Y[key].append([float(v) for v in obs[(v2_range[0]):(v2_range[1] + 1)]])            except ValueError:                print("which means your data include string not number")        else:            try:                # Give a range to get input or ouput data                X[tmp_key].append(                    [float(v) for v in obs[(v1_range[0]):(v1_range[1] + 1)]])  # List comprehension                Y[tmp_key].append([float(v) for v in obs[(v2_range[0]):(v2_range[1] + 1)]])            except ValueError:                print("which means your data include string not number")        counter += 1    return DMU, X, Y, p_n